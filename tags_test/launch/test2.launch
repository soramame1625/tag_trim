<launch>
<!-- USB_cam -->
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video1" />
    <param name="image_width" value="1280" />
    <param name="image_height" value="720" />
    <param name="pixel_format" value="mjpeg" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
    <param name="camera_info_url" value="package://tags_test/config/ost.yaml" />
    <param name="framerate" value="60" />
  </node>

  <node name="trimming_image" pkg="opencv" type="trim_2.py"/>


  <arg name="launch_prefix" default="" /> <!-- set to value="gdbserver localhost:10000" for remote debugging -->
  <arg name="node_namespace" default="apriltag_ros_continuous_node" />
  <arg name="camera_name" default="/usb_cam" />
  <arg name="camera_frame" default="usb_cam" />
  <arg name="image_topic" default="image_raw" />

  <!-- Set parameters -->
  <rosparam command="load" file="$(find tags_test)/config/settings.yaml" ns="$(arg node_namespace)" />
  <rosparam command="load" file="$(find tags_test)/config/tags.yaml" ns="$(arg node_namespace)" />

  <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="$(arg node_namespace)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" >
    <!-- Remap topics from those used in code to those on the ROS network -->
    <!--remap from="image_rect" to="$(arg camera_name)/$(arg image_topic)" /-->
    <remap from="image_rect" to="/trimming_image" />
    <!--remap from="camera_info" to="$(arg camera_name)/camera_info" /-->
    <remap from="camera_info" to="/trimming_info" />

    <param name="camera_frame" type="str" value="$(arg camera_frame)" />
    <param name="publish_tag_detections_image" type="bool" value="true" />
    <!-- default: false -->
  </node>

  <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/tag_detections_image"/>
    <param name="autosize" value="true" />
  </node>

</launch>
